// –ú–æ–∫-—Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ (–ø–æ–∫–∞ –Ω–µ—Ç –±—ç–∫–µ–Ω–¥–∞)
function generateMockPlan(businessType, targetAudience) {
    return `üìÖ –ö–û–ù–¢–ï–ù–¢-–ü–õ–ê–ù –ù–ê –ú–ï–°–Ø–¶ - ${businessType.toUpperCase()}

–ù–ï–î–ï–õ–Ø 1:
‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±—Ä–µ–Ω–¥–æ–º/—É—Å–ª—É–≥–æ–π
‚Ä¢ –í—Ç–æ—Ä–Ω–∏–∫: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –¥–µ–π—Å—Ç–≤–∏–∏  
‚Ä¢ –°—Ä–µ–¥–∞: –û—Ç–∑—ã–≤—ã –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
‚Ä¢ –ß–µ—Ç–≤–µ—Ä–≥: –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —Ç–µ–º–µ
‚Ä¢ –ü—è—Ç–Ω–∏—Ü–∞: –ó–∞ –∫—É–ª–∏—Å–∞–º–∏ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã
‚Ä¢ –°—É–±–±–æ—Ç–∞: –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
‚Ä¢ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ –Ω–µ–¥–µ–ª–∏

–ù–ï–î–ï–õ–Ø 2:
‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
‚Ä¢ –í—Ç–æ—Ä–Ω–∏–∫: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ "–¥–æ/–ø–æ—Å–ª–µ"
‚Ä¢ –°—Ä–µ–¥–∞: FAQ - –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ß–µ—Ç–≤–µ—Ä–≥: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏
‚Ä¢ –ü—è—Ç–Ω–∏—Ü–∞: –ö–æ–º–∞–Ω–¥–∞ –∏ –µ—ë –∏—Å—Ç–æ—Ä–∏—è
‚Ä¢ –°—É–±–±–æ—Ç–∞: –ö–æ–Ω–∫—É—Ä—Å –∏–ª–∏ —Ä–æ–∑—ã–≥—Ä—ã—à
‚Ä¢ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é

–ù–ï–î–ï–õ–ò 3-4: –†–∞–∑–≤–∏—Ç–∏–µ —Ç–µ–º–∞—Ç–∏–∫ —Å —É—á—ë—Ç–æ–º –∞—É–¥–∏—Ç–æ—Ä–∏–∏ ${targetAudience}...

üí° –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–∞!`;
}

function generateMockHashtags(postText) {
    const commonTags = "#–∫–æ–Ω—Ç–µ–Ω—Ç #smm #–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ #–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ #–±–∏–∑–Ω–µ—Å #—Ä–µ–∫–ª–∞–º–∞ #—Å–æ—Ü—Å–µ—Ç–∏ #–∏–Ω—Å—Ç–∞–≥—Ä–∞–º #–ø—Ä–æ–¥–∞–∂–∏ #–∫–ª–∏–µ–Ω—Ç—ã";
    
    return `üè∑Ô∏è –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –•–ï–®–¢–ï–ì–ò:

–û—Å–Ω–æ–≤–Ω—ã–µ:
${commonTags}

–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ:
#–∫–∞—á–µ—Å—Ç–≤–æ #—Å–µ—Ä–≤–∏—Å #–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ #–Ω–∞–¥–µ–∂–Ω–æ #—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 5-10 —Ö–µ—à—Ç–µ–≥–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ö–≤–∞—Ç–∞!`;
}

function generateMockAnalysis(profileUrl) {
    if (!profileUrl.includes('instagram.com')) {
        return "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Instagram –ø—Ä–æ—Ñ–∏–ª—å";
    }

    return `üìä –ê–ù–ê–õ–ò–ó –ö–û–ù–ö–£–†–ï–ù–¢–ê

üë§ –ü—Ä–æ—Ñ–∏–ª—å: ${profileUrl}

üìà –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:
‚Ä¢ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ~12,500
‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: 3-4 –ø–æ—Å—Ç–∞ –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –í–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å: 4.2%

üéØ –ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è:
‚Ä¢ 35% - –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
‚Ä¢ 30% - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π  
‚Ä¢ 20% - —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π
‚Ä¢ 15% - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç

‚è∞ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:
‚Ä¢ –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –ø–æ—Å—Ç–∏–Ω–≥–∞: 18:00-21:00
‚Ä¢ –°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏: –í—Ç, –°—Ä, –ü—Ç

üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
1. –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ Stories
2. –£–≤–µ–ª–∏—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–æ–≤
3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–¥—ã –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ö–µ—à—Ç–µ–≥–∏

‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏`;
}

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function generatePlan() {
    const businessType = document.getElementById('businessType').value.trim();
    const targetAudience = document.getElementById('targetAudience').value.trim();
    const resultDiv = document.getElementById('planResult');

    if (!businessType || !targetAudience) {
        resultDiv.innerHTML = '<div class="error">‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è</div>';
        return;
    }

    resultDiv.innerHTML = '<div class="loading">‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω...</div>';

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
    setTimeout(() => {
        const plan = generateMockPlan(businessType, targetAudience);
        resultDiv.innerHTML = `<div class="success"><pre>${plan}</pre></div>`;
    }, 1500);
}

async function generateHashtags() {
    const postText = document.getElementById('postText').value.trim();
    const resultDiv = document.getElementById('hashtagsResult');

    if (!postText) {
        resultDiv.innerHTML = '<div class="error">‚ùå –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞</div>';
        return;
    }

    resultDiv.innerHTML = '<div class="loading">‚è≥ –ü–æ–¥–±–∏—Ä–∞–µ–º —Ö–µ—à—Ç–µ–≥–∏...</div>';

    setTimeout(() => {
        const hashtags = generateMockHashtags(postText);
        resultDiv.innerHTML = `<div class="success"><pre>${hashtags}</pre></div>`;
    }, 1000);
}

async function analyzeCompetitor() {
    const profileUrl = document.getElementById('profileUrl').value.trim();
    const resultDiv = document.getElementById('analysisResult');

    if (!profileUrl) {
        resultDiv.innerHTML = '<div class="error">‚ùå –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å</div>';
        return;
    }

    resultDiv.innerHTML = '<div class="loading">‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞...</div>';

    setTimeout(() => {
        const analysis = generateMockAnalysis(profileUrl);
        resultDiv.innerHTML = `<div class="success"><pre>${analysis}</pre></div>`;
    }, 2000);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
    }
});

async function fetchStats() {
  const url = document.getElementById('statsUrl').value.trim();
  const resultDiv = document.getElementById('statsResult');
  if (!url) {
    resultDiv.innerHTML = '<div class="error">‚ùå –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å</div>';
    return;
  }
  resultDiv.innerHTML = '<div class="loading">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</div>';
  try {
    const res = await fetch(`${API_BASE}/fetch-stats`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ profileUrl: url })
    });
    const data = await res.json();
    if (data.success) {
      resultDiv.innerHTML = `
        <div class="success">
          –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${data.stats.followers}<br>
          –ü–æ–¥–ø–∏—Å–∫–∏: ${data.stats.following}<br>
          –ü–æ—Å—Ç—ã: ${data.stats.posts}
        </div>`;
    } else {
      resultDiv.innerHTML = `<div class="error">‚ùå ${data.error}</div>`;
    }
  } catch {
    resultDiv.innerHTML = '<div class="error">‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</div>';
  }
}

function generateCalendar() {
  const monthInput = document.getElementById('calendarMonth').value;
  const daysSelect = Array.from(document.getElementById('daysOfWeek').selectedOptions).map(o => parseInt(o.value));
  const topics = document.getElementById('topicsList').value.split(',').map(t => t.trim()).filter(Boolean);
  const resultDiv = document.getElementById('calendarResult');

  if (!monthInput || daysSelect.length === 0 || topics.length === 0) {
    resultDiv.innerHTML = '<div class="error">‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è</div>';
    return;
  }

  resultDiv.innerHTML = '<div class="loading">‚è≥ –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å...</div>';

  setTimeout(() => {
    const [year, month] = monthInput.split('-').map(Number);
    const date = new Date(year, month - 1, 1);
    const calendar = [];

    while (date.getMonth() === month - 1) {
      if (daysSelect.includes(date.getDay())) {
        const topic = topics[calendar.length % topics.length];
        calendar.push({ day: date.getDate(), topic });
      }
      date.setDate(date.getDate() + 1);
    }

    let html = '<table class="calendar-table"><tr><th>–î–∞—Ç–∞</th><th>–¢–µ–º–∞</th></tr>';
    calendar.forEach(item => {
      html += `<tr><td>${year}-${String(month).padStart(2, '0')}-${String(item.day).padStart(2, '0')}</td><td>${item.topic}</td></tr>`;
    });
    html += '</table>';

    resultDiv.innerHTML = `<div class="success">${html}</div>`;
  }, 500);
}
